<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
        <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
        <members>
          <member value='&quot;Taux mortalité(2016)&quot;' />
          <member value='&quot;PopUrbaine&quot;' />
          <member value='&quot;Acces eau basic&quot;' />
          <member value='&quot;Stabilité politique&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Paramètre 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Acces eau basic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taux mortalité(2016)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Stabilité politique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PopUrbaine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taux mortalité&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='prep (Sortie88)' inline='true' name='federated.1rk28k01223szo18acg961l6zjkb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sortie88' name='excel-direct.1bmp2180q8hnhk1gi0o1q1n41i89'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/benmi/Documents/Data Analyst/P_8/Sortie88.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1bmp2180q8hnhk1gi0o1q1n41i89' name='prep' table='[prep$]' type='table'>
          <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Population using at least basic drinking-water services (%)' ordinal='2' />
            <column datatype='string' name='Granularity' ordinal='3' />
            <column datatype='real' name='Population using safely managed drinking-water services (%)' ordinal='4' />
            <column datatype='integer' name='Year-2' ordinal='5' />
            <column datatype='string' name='Country-2' ordinal='6' />
            <column datatype='string' name='Granularity-2' ordinal='7' />
            <column datatype='real' name='Mortality rate attributed to exposure to unsafe WASH services' ordinal='8' />
            <column datatype='real' name='WASH deaths' ordinal='9' />
            <column datatype='string' name='Country-1' ordinal='10' />
            <column datatype='integer' name='Year-1' ordinal='11' />
            <column datatype='real' name='Political_Stability' ordinal='12' />
            <column datatype='string' name='Granularity-1' ordinal='13' />
            <column datatype='string' name='Country-3' ordinal='14' />
            <column datatype='string' name='Granularity-3' ordinal='15' />
            <column datatype='integer' name='Year-3' ordinal='16' />
            <column datatype='real' name='Population' ordinal='17' />
            <column datatype='string' name='REGION (DISPLAY)' ordinal='18' />
            <column datatype='string' name='COUNTRY (DISPLAY)' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population using at least basic drinking-water services (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population using at least basic drinking-water services (%)]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Population using at least basic drinking-water services (%)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Granularity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Granularity]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Granularity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population using safely managed drinking-water services (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population using safely managed drinking-water services (%)]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Population using safely managed drinking-water services (%)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year-2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year-2]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Year-2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country-2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country-2]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Country-2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Granularity-2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Granularity-2]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Granularity-2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate attributed to exposure to unsafe WASH services</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate attributed to exposure to unsafe WASH services]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Mortality rate attributed to exposure to unsafe WASH services</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WASH deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WASH deaths]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>WASH deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country-1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country-1]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Country-1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year-1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year-1]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Year-1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political_Stability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Political_Stability]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Political_Stability</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Granularity-1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Granularity-1]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Granularity-1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country-3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country-3]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Country-3</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Granularity-3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Granularity-3]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Granularity-3</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year-3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year-3]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Year-3</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION (DISPLAY)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[REGION (DISPLAY)]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>REGION (DISPLAY)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY (DISPLAY)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY (DISPLAY)]</local-name>
            <parent-name>[prep]</parent-name>
            <remote-alias>COUNTRY (DISPLAY)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[prep]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T10001:no:A1:T10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
      </column>
      <column caption='PoPR' datatype='integer' name='[Calculation_613334001949175809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Rural&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
      </column>
      <column caption='PoPM' datatype='real' name='[Calculation_613334001949401090]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Population] * 100' />
      </column>
      <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
      </column>
      <column caption='%PopR' datatype='real' name='[Calculation_613334001950490628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Calculation_613334001949175809]) / sum([Calculation_613334001953488901])) * 100' />
      </column>
      <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
      </column>
      <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
      </column>
      <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country-1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country-2]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country-3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population using safely managed drinking-water services (%)]' role='measure' type='quantitative' />
      <column aggregate-role-from='[COUNTRY (DISPLAY)]' caption='Region (Display)' datatype='string' name='[REGION (DISPLAY)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year-1]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year-2]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year-3]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[COUNTRY (DISPLAY)]' derivation='Attribute' name='[attr:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Mortality rate attributed to exposure to unsafe WASH services]' derivation='Avg' name='[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population using at least basic drinking-water services (%)]' derivation='Avg' name='[avg:Population using at least basic drinking-water services (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population using safely managed drinking-water services (%)]' derivation='Avg' name='[avg:Population using safely managed drinking-water services (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
      <column-instance column='[REGION (DISPLAY)]' derivation='None' name='[none:REGION (DISPLAY):nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_613334001949401090]' derivation='Sum' name='[sum:Calculation_613334001949401090:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortality rate attributed to exposure to unsafe WASH services]' derivation='Sum' name='[sum:Mortality rate attributed to exposure to unsafe WASH services:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population using at least basic drinking-water services (%)]' derivation='Sum' name='[sum:Population using at least basic drinking-water services (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population using safely managed drinking-water services (%)]' derivation='Sum' name='[sum:Population using safely managed drinking-water services (%):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Year)' hidden='true' name='[Action (Country,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Region (Display), Country (Display)'>
          <field>[COUNTRY (DISPLAY)]</field>
          <field>[REGION (DISPLAY)]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.441379' group-percentage='0.0862069' measure-ordering='alphabetic' measure-percentage='0.422414' parameter-percentage='0.05' rowDisplayCount='10000' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2009</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2000</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2005</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2013</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2010</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2002</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2017</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2007</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2014</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2015</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2011</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2008</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2016</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2012</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2004</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (\%):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Mortality rate attributed to exposure to unsafe WASH services:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Calculation_613334001949401090:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Population using safely managed drinking-water services (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Population using at least basic drinking-water services (\%):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:COUNTRY (DISPLAY):nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (\%):qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Population using safely managed drinking-water services (\%):qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (\%):qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[sum:Population using safely managed drinking-water services (\%):qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (\%):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2009</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2000</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2005</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2013</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2010</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2006</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2002</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2017</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2007</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2014</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2015</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2011</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2008</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2016</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2012</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2004</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:COUNTRY (DISPLAY):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY (DISPLAY):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:REGION (DISPLAY):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Eastern Mediterranean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Pacific&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South-East Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
          <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Surligner 1 (généré)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='TdB : Vue Continental' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region (Display)' />
        <param name='target' value='TdB : Vue Continental' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cont: 4i'>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column aggregate-role-from='[COUNTRY (DISPLAY)]' caption='Region (Display)' datatype='string' name='[REGION (DISPLAY)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[REGION (DISPLAY)]' derivation='None' name='[none:REGION (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='11'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]' field-type='quantitative' max='21708896.433143262' min='-15228323.467261346' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]' field-type='quantitative' max='11490866.088198701' min='-7177896.2352200877' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' />
              <lod column='[Parameters].[Paramètre 1]' />
              <geometry column='[federated.1rk28k01223szo18acg961l6zjkb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
                <format attr='font-style' value='normal' />
                <format attr='text-decoration' value='none' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{D0FD0EA1-6F35-4C7D-ADEB-882EBB45F4AC}' />
    </worksheet>
    <worksheet name='Contiental Chiffre'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Résultat indicateur</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column aggregate-role-from='[COUNTRY (DISPLAY)]' caption='Region (Display)' datatype='string' name='[REGION (DISPLAY)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[REGION (DISPLAY)]' derivation='None' name='[none:REGION (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]'>
            <groupfilter function='member' level='[none:REGION (DISPLAY):nk]' member='&quot;Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='11'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='52' />
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='height' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='43' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='85' />
            <format attr='height' value='40' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#4e79a7' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk] * [federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{46DEAE36-8770-4096-9F6D-C160758E9BC7}' />
    </worksheet>
    <worksheet name='Continental temps'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Evolution dans le temps</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column aggregate-role-from='[COUNTRY (DISPLAY)]' caption='Region (Display)' datatype='string' name='[REGION (DISPLAY)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[REGION (DISPLAY)]' derivation='None' name='[none:REGION (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
              <lod column='[Parameters].[Paramètre 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{4D7674A2-A14B-4DAC-921A-1411157B0312}' />
    </worksheet>
    <worksheet name='Domaine 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Consulting</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
          </datasources>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_613334001948946432]' derivation='Avg' name='[avg:Calculation_613334001948946432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population using at least basic drinking-water services (%)]' derivation='Avg' name='[avg:Population using at least basic drinking-water services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_613334001950261251]' derivation='User' name='[usr:Calculation_613334001950261251:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' filter-group='3'>
            <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Armenia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]' value='false' />
            <format attr='break-on-special' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk]' />
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Calculation_613334001948946432:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk]' z-order='2' />
            <reference-line axis-column='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{806C4CB0-ED78-4DE4-826A-C0CB9E11C4D1}' />
    </worksheet>
    <worksheet name='Domaine 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Modernisation des services</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using safely managed drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Population using at least basic drinking-water services (%)]' derivation='Avg' name='[avg:Population using at least basic drinking-water services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population using safely managed drinking-water services (%)]' derivation='Avg' name='[avg:Population using safely managed drinking-water services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (\%):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' filter-group='3'>
            <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Armenia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]' />
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (%):qk]</cols>
      </table>
      <simple-id uuid='{FD2F5260-E490-4F4B-8767-9F3DD1746C68}' />
    </worksheet>
    <worksheet name='Domaine 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Création de services</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using safely managed drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Mortality rate attributed to exposure to unsafe WASH services]' derivation='Avg' name='[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political_Stability]' derivation='Avg' name='[avg:Political_Stability:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population using at least basic drinking-water services (%)]' derivation='Avg' name='[avg:Population using at least basic drinking-water services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population using safely managed drinking-water services (%)]' derivation='Avg' name='[avg:Population using safely managed drinking-water services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (\%):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' filter-group='3'>
            <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Armenia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]' scope='rows' value='Taux de mortalité lié aux mauvais services de distribution d&apos;eau' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]' />
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]' />
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]' />
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk] + [federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using safely managed drinking-water services (%):qk])</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[avg:Political_Stability:qk]</cols>
      </table>
      <simple-id uuid='{0D83AB75-20AB-4418-A7AA-2F123C12AB68}' />
    </worksheet>
    <worksheet name='Internationale Chiffre'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Résultat indicateur</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='52' />
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='85' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='#4e79a7' />
            <format attr='font-weight' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='bold' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='#4e79a7' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e80000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{25EDC907-192D-4822-BF70-DDFE9022980C}' />
    </worksheet>
    <worksheet name='Internationale temps'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Evolution dans le temps</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <path column='[Parameters].[Paramètre 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='111' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{862B1E3B-0F9E-451A-B93E-2F83867734AA}' />
    </worksheet>
    <worksheet name='National'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Vue nationale</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' filter-group='8'>
            <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Algeria&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='11'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]' field-type='quantitative' max='12525554.344591415' min='-15479406.159640847' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]' field-type='quantitative' max='10339230.627243439' min='-4392906.5805017594' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' />
              <lod column='[Parameters].[Paramètre 1]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' />
              <geometry column='[federated.1rk28k01223szo18acg961l6zjkb].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B213C3DA-056B-4B2F-A1E1-8FE4F812C060}' />
    </worksheet>
    <worksheet name='National chiffres'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Résultat indicateur</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Sum' name='[sum:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' filter-group='8'>
            <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Algeria&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' direction='DESC' using='[federated.1rk28k01223szo18acg961l6zjkb].[sum:Year:qk]' />
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='11'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='52' />
            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='height' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='43' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='85' />
            <format attr='height' value='40' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='#4e79a7' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' value='10' />
            <format attr='height-header' value='10' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]' value='#4e79a7' />
            <format attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#4e79a7' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk] * [federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{FB770493-725C-421F-8892-1E348A22C4B4}' />
    </worksheet>
    <worksheet name='National temps'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Evolution dans le temps</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' filter-group='8'>
            <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Algeria&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[Parameters].[Paramètre 1]' />
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{730110EE-2851-4DEF-B2C1-2F07C3ADAAB6}' />
    </worksheet>
    <worksheet name='Vue continental'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Vue continental</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column aggregate-role-from='[COUNTRY (DISPLAY)]' caption='Region (Display)' datatype='string' name='[REGION (DISPLAY)]' role='dimension' type='nominal' />
            <column datatype='real' name='[WASH deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Mortality rate attributed to exposure to unsafe WASH services]' derivation='Avg' name='[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population using at least basic drinking-water services (%)]' derivation='Avg' name='[avg:Population using at least basic drinking-water services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[WASH deaths]' derivation='Avg' name='[avg:WASH deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political_Stability]' derivation='Median' name='[med:Political_Stability:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REGION (DISPLAY)]' derivation='None' name='[none:REGION (DISPLAY):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_613334001950261251]' derivation='User' name='[usr:Calculation_613334001950261251:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:REGION (DISPLAY):nk]' to='&quot;Western Pacific&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</column>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk]' scope='cols' value='Taux Urbanisation%' />
            <format attr='title' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]' scope='cols' value='Population ayant acces à l&apos;eau potable' />
            <format attr='title' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[med:Political_Stability:qk]' scope='cols' value='Stabilité Politique' />
            <format attr='title' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]' scope='cols' value='Taux de mortalité dû à de l’eau insalubre' />
            <format attr='title' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[avg:WASH deaths:qk]' scope='cols' value='Moyenne nbr mort' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[avg:WASH deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rk28k01223szo18acg961l6zjkb].[med:Political_Stability:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</rows>
        <cols>([federated.1rk28k01223szo18acg961l6zjkb].[avg:WASH deaths:qk] + ([federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk] + ([federated.1rk28k01223szo18acg961l6zjkb].[med:Political_Stability:qk] + ([federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk] + [federated.1rk28k01223szo18acg961l6zjkb].[avg:Population using at least basic drinking-water services (%):qk]))))</cols>
      </table>
      <simple-id uuid='{B79E7F8A-1427-4A79-BAD2-62D491488EC3}' />
    </worksheet>
    <worksheet name='Vue international 4i'>
      <table>
        <view>
          <datasources>
            <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
            <datasource caption='Paramètres' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
              <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
            <column caption='PopU' datatype='integer' name='[Calculation_613334001948946432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Urban&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='%PopU' datatype='real' name='[Calculation_613334001950261251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Calculation_613334001948946432]) / sum([Calculation_613334001953488901])) * 100' />
            </column>
            <column caption='PopT' datatype='integer' name='[Calculation_613334001953488901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(IF [Granularity-3] = &quot;Total&quot;&#13;&#10;THEN [Population] * 100&#13;&#10;ELSE 0&#13;&#10;END)' />
            </column>
            <column caption='Résulat indicateur' datatype='real' datatype-customized='true' name='[Calculation_853432160937103362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;Taux mortalité(2016)&quot;&#13;&#10;THEN AVG([Mortality rate attributed to exposure to unsafe WASH services])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Acces eau basic&quot;&#13;&#10;THEN AVG([Population using at least basic drinking-water services (%)])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;Stabilité politique&quot;&#13;&#10;THEN AVG([Political_Stability])&#13;&#10;ELSEIF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE [Calculation_853432161371799556]&#13;&#10;END' />
            </column>
            <column caption='Densité population urb' datatype='real' name='[Calculation_853432161371799556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Paramètre 1] = &quot;PopUrbaine&quot;&#13;&#10;THEN [Calculation_613334001950261251]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Granularity-3]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mortality rate attributed to exposure to unsafe WASH services]' role='measure' type='quantitative' />
            <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population using at least basic drinking-water services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_853432160937103362]' derivation='User' name='[usr:Calculation_853432160937103362:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' num-steps='15' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='true' />
            <format attr='break-on-special' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='true' />
            <format attr='show-null-value-warning' field='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#efebe8' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]' />
              <lod column='[Parameters].[Paramètre 1]' />
              <color column='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' />
              <geometry column='[federated.1rk28k01223szo18acg961l6zjkb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='has-halo' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]</rows>
        <cols>[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A970AC4C-B18C-4C41-8DD0-6C0BE552E8BB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Les 3 domaines'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
      </datasources>
      <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
        <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='11' name='Domaine 2' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='15' name='Domaine 3' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='16' name='Domaine 1' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='34875' id='12' name='Domaine 2' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6375' id='14' name='Domaine 2' pane-specification-id='4' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='color' w='16000' x='83200' y='35875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34875' id='17' name='Domaine 1' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='16000' x='83200' y='42250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='18' name='Domaine 1' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='highlighter' w='16000' x='83200' y='77125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14875' id='19' name='Domaine 1' synchronized='1' type='currpage' w='16000' x='83200' y='84125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='39' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='15' is-fixed='true' name='Domaine 3' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34875' id='12' mode='checkdropdown' name='Domaine 2' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Domaine 2' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6375' id='14' name='Domaine 2' pane-specification-id='4' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='color' w='16000' x='83200' y='35875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34875' id='17' mode='checkdropdown' name='Domaine 1' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='16000' x='83200' y='42250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='18' name='Domaine 1' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='highlighter' w='16000' x='83200' y='77125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='16' is-fixed='true' name='Domaine 1' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14875' id='19' name='Domaine 1' synchronized='1' type='currpage' w='16000' x='83200' y='84125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F13F391D-11C2-4AE3-A506-04C3AEBA3499}' />
    </dashboard>
    <dashboard name='Présentation du P8' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Vue mondiale' captured-sheet='TdB : Vue international' id='1'>
                    <capturedDeltas>
                      <worksheet name='Vue continental'>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
                          <groupfilter function='member' level='[none:Year:ok]' member='2009' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Vue international 4i'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]' field-type='quantitative' max='17245877.946720731' min='-18362570.970059544' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]' field-type='quantitative' max='27816187.553029776' min='-44324683.755489074' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Vue continentale' captured-sheet='TdB : Vue Continental' id='2'>
                    <capturedDeltas>
                      <worksheet name='Cont: 4i'>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
                          <groupfilter function='member' level='[none:Year:ok]' member='2002' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Contiental Chiffre'>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]'>
                          <groupfilter function='member' level='[none:REGION (DISPLAY):nk]' member='&quot;Eastern Mediterranean&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
                          <groupfilter function='member' level='[none:Year:ok]' member='2002' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column name='[Paramètre 1]' value='&quot;Acces eau basic&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Vue nationale' captured-sheet='TdB : Vue national' id='3'>
                    <capturedDeltas>
                      <worksheet name='National'>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]'>
                          <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
                          <groupfilter function='member' level='[none:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Latitude (generated)]' field-type='quantitative' max='14484516.090149313' min='-9832115.0139595978' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1rk28k01223szo18acg961l6zjkb].[Longitude (generated)]' field-type='quantitative' max='15766722.827800047' min='-21415369.269482918' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='National chiffres'>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]'>
                          <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]'>
                          <groupfilter function='member' level='[none:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='National temps'>
                        <filter class='categorical' column='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]'>
                          <groupfilter function='member' level='[none:COUNTRY (DISPLAY):nk]' member='&quot;Argentina&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column name='[Paramètre 1]' value='&quot;Acces eau basic&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Les domaines' captured-sheet='Les 3 domaines' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{78351B6B-5FA5-46FE-AD8E-22FFDFCB37B2}' />
    </dashboard>
    <dashboard name='TdB : Vue Continental'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Paramètres' name='Parameters' />
        <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
          <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
          <members>
            <member value='&quot;Taux mortalité(2016)&quot;' />
            <member value='&quot;PopUrbaine&quot;' />
            <member value='&quot;Acces eau basic&quot;' />
            <member value='&quot;Stabilité politique&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
        <column aggregate-role-from='[COUNTRY (DISPLAY)]' caption='Region (Display)' datatype='string' name='[REGION (DISPLAY)]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[REGION (DISPLAY)]' derivation='None' name='[none:REGION (DISPLAY):nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='87499' x='667' y='1000'>
              <zone h='71500' id='18' name='Cont: 4i' w='87499' x='667' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26500' id='21' name='Continental temps' w='87499' x='667' y='72500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='134' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='11167' x='88166' y='1000'>
              <zone h='7875' id='33' mode='dropdown' name='Contiental Chiffre' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='11167' x='88166' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='20' mode='compact' param='[Parameters].[Paramètre 1]' type='paramctrl' w='11167' x='88166' y='8875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19500' id='23' name='Continental temps' pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='color' w='11167' x='88166' y='15875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7875' id='32' mode='dropdown' name='Contiental Chiffre' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='filter' values='cascading' w='11167' x='88166' y='35375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24125' id='31' name='Contiental Chiffre' w='11167' x='88166' y='43250'>
                <layout-cache minwidth='102' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='51' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='71500' id='18' is-fixed='true' name='Cont: 4i' w='87499' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='20' mode='compact' param='[Parameters].[Paramètre 1]' type='paramctrl' w='11167' x='88166' y='8875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7875' id='33' mode='dropdown' name='Contiental Chiffre' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='11167' x='88166' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7875' id='32' mode='dropdown' name='Contiental Chiffre' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='filter' values='cascading' w='11167' x='88166' y='35375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='185' h='24125' id='31' is-fixed='true' name='Contiental Chiffre' w='11167' x='88166' y='43250'>
                  <layout-cache minwidth='102' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='26500' id='21' is-fixed='true' name='Continental temps' w='87499' x='667' y='72500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19500' id='23' name='Continental temps' pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='color' w='11167' x='88166' y='15875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89BECF2F-0550-4A1E-977E-5BA0BE2D326B}' />
    </dashboard>
    <dashboard name='TdB : Vue international'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Paramètres' name='Parameters' />
        <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
          <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
          <members>
            <member value='&quot;Taux mortalité(2016)&quot;' />
            <member value='&quot;PopUrbaine&quot;' />
            <member value='&quot;Acces eau basic&quot;' />
            <member value='&quot;Stabilité politique&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='85333' x='667' y='1000'>
              <zone h='70000' id='1' name='Vue international 4i' w='85333' x='667' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24000' id='13' name='Internationale temps' w='85333' x='667' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4000' id='7' name='Vue international 4i' pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' type='color' w='85333' x='667' y='71000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86000' y='1000'>
              <zone h='7625' id='6' mode='dropdown' name='Vue international 4i' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='13333' x='86000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='8' mode='compact' param='[Parameters].[Paramètre 1]' type='paramctrl' w='13333' x='86000' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3000' id='14' name='Internationale temps' pane-specification-id='0' param='[Parameters].[Paramètre 1]' type='color' w='13333' x='86000' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='635' h='32375' id='24' is-fixed='true' name='Internationale Chiffre' w='13333' x='85750' y='16500'>
          <layout-cache cell-count-w='1' minheight='185' non-cell-size-w='77' type-h='scalable' type-w='cell' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='42' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='7625' id='6' mode='dropdown' name='Vue international 4i' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='13333' x='86000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70000' id='1' is-fixed='true' name='Vue international 4i' w='85333' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4000' id='7' name='Vue international 4i' pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' type='color' w='85333' x='667' y='71000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='8' mode='compact' param='[Parameters].[Paramètre 1]' type='paramctrl' w='13333' x='86000' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='259' h='32375' id='24' is-fixed='true' name='Internationale Chiffre' w='13333' x='85750' y='16500'>
                  <layout-cache cell-count-w='1' minheight='185' non-cell-size-w='77' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24000' id='13' is-fixed='true' name='Internationale temps' w='85333' x='667' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='14' name='Internationale temps' pane-specification-id='0' param='[Parameters].[Paramètre 1]' type='color' w='13333' x='86000' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B2B2859D-52DC-46AB-832F-A0AA56D5E77D}' />
    </dashboard>
    <dashboard name='TdB : Vue national'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Paramètres' name='Parameters' />
        <datasource caption='prep (Sortie88)' name='federated.1rk28k01223szo18acg961l6zjkb' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choix des indicateurs' datatype='string' name='[Paramètre 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Stabilité politique&quot;'>
          <calculation class='tableau' formula='&quot;Stabilité politique&quot;' />
          <members>
            <member value='&quot;Taux mortalité(2016)&quot;' />
            <member value='&quot;PopUrbaine&quot;' />
            <member value='&quot;Acces eau basic&quot;' />
            <member value='&quot;Stabilité politique&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1rk28k01223szo18acg961l6zjkb'>
        <column caption='Country (Display)' datatype='string' name='[COUNTRY (DISPLAY)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[COUNTRY (DISPLAY)]' derivation='None' name='[none:COUNTRY (DISPLAY):nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='74000' id='9' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='74000' id='7' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='74000' id='5' name='National' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='74000' id='8' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='11' mode='checkdropdown' name='National' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='12' mode='compact' param='[Parameters].[Paramètre 1]' type='paramctrl' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7625' id='14' mode='dropdown' name='National temps' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' w='16000' x='83200' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24125' id='19' name='National chiffres' w='16000' x='83200' y='23250'>
                <layout-cache fixed-size-h='185' minwidth='102' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='24000' id='13' name='National temps' w='98400' x='800' y='75000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='37' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='7625' id='11' mode='checkdropdown' name='National' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='5' is-fixed='true' name='National' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='12' mode='compact' param='[Parameters].[Paramètre 1]' type='paramctrl' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='185' h='24125' id='19' is-fixed='true' name='National chiffres' w='16000' x='83200' y='23250'>
                  <layout-cache fixed-size-h='185' minwidth='102' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='14' mode='dropdown' name='National temps' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' w='16000' x='83200' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24000' id='13' is-fixed='true' name='National temps' w='98400' x='800' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{40AE330D-8106-40B5-A87F-C2555CAFE4C1}' />
    </dashboard>
  </dashboards>
  <windows film-mode='true' saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' maximized='true' name='Vue international 4i'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='dropdown' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[avg:Mortality rate attributed to exposure to unsafe WASH services:qk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_613334001950261251:qk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4100D57F-FA42-4CCC-9870-C400D28633EF}' />
    </window>
    <window class='worksheet' name='Internationale temps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card param='[Parameters].[Paramètre 1]' type='highlighter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B19400C-5F5F-4C83-BD7E-D2C8E61198B1}' />
    </window>
    <window class='worksheet' name='Internationale Chiffre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AC1A244-8347-4C36-ADA7-79561564397D}' />
    </window>
    <window class='worksheet' name='Vue continental'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0D1D18E-246C-45A9-8F50-BB4508C7B6B8}' />
    </window>
    <window class='worksheet' name='Continental temps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card param='[Parameters].[Paramètre 1]' type='highlighter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{630A5AAB-25C9-4C30-A66F-3B0CA3761502}' />
    </window>
    <window class='worksheet' name='Cont: 4i'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card type='currpage' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1rk28k01223szo18acg961l6zjkb].[usr:Calculation_853432160937103362:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2016</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BDB8070-57B4-4DE1-ACE8-28DC4B27EC28}' />
    </window>
    <window class='worksheet' name='National chiffres'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACB8DAC3-8009-4B4E-92D5-133B4BE6C44F}' />
    </window>
    <window class='worksheet' name='Contiental Chiffre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]' type='filter' values='cascading' />
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B25AEBD-AFEE-4056-B1F4-BD6EF90CC9A0}' />
    </window>
    <window class='worksheet' name='National'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='checkdropdown' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[avg:Political_Stability:ok]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49A9A0B3-058D-463F-8AAA-BA96211935AC}' />
    </window>
    <window class='worksheet' name='National temps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='checkdropdown' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' />
            <card mode='checkdropdown' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' show-morefewerbutton='true' type='filter' />
            <card param='[Parameters].[Paramètre 1]' type='highlighter' />
            <card mode='compact' param='[Parameters].[Paramètre 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Paramètre 1]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61606726-B72E-4213-B7E7-A091FD14800B}' />
    </window>
    <window class='worksheet' name='Domaine 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Country-3:nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC767AF6-A9FA-4329-8431-5A4D3516672C}' />
    </window>
    <window class='worksheet' name='Domaine 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' />
            <card pane-specification-id='4' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[attr:Year:ok]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9B0885A-9261-411F-AE03-30475410B4FA}' />
    </window>
    <window class='worksheet' name='Domaine 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='dropdown' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]' type='filter' />
            <card param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='filter' values='cascading' />
            <card pane-specification-id='6' param='[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[:Measure Names]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[attr:Year:ok]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:COUNTRY (DISPLAY):nk]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:ok]</field>
            <field>[federated.1rk28k01223szo18acg961l6zjkb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F759720-ACA4-41FE-9E28-8E2730071FFD}' />
    </window>
    <window class='dashboard' name='TdB : Vue international'>
      <viewpoints>
        <viewpoint name='Internationale Chiffre'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Internationale temps'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vue international 4i'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{18B5FBBD-D35C-41CF-B575-740B92A139EC}' />
    </window>
    <window class='dashboard' name='TdB : Vue Continental'>
      <viewpoints>
        <viewpoint name='Cont: 4i'>
          <current-page>
            <multibucket>
              <bucket>2007</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Contiental Chiffre' />
        <viewpoint name='Continental temps'>
          <zoom type='entire-view' />
          <highlight field='[federated.1rk28k01223szo18acg961l6zjkb].[none:REGION (DISPLAY):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{50D5D38B-8D74-4464-90CC-3B4BD4C6784D}' />
    </window>
    <window class='dashboard' name='TdB : Vue national'>
      <viewpoints>
        <viewpoint name='National'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='National chiffres'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='National temps'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{15F41C64-F710-479E-A5E8-31B9E1DB5592}' />
    </window>
    <window class='dashboard' name='Les 3 domaines'>
      <viewpoints>
        <viewpoint name='Domaine 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Domaine 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Domaine 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{08662BD1-A679-4C23-8828-76A10E075E29}' />
    </window>
    <window class='dashboard' name='Présentation du P8'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{ACCC4FB2-44A0-451C-98DA-29486C53A63B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cont: 4i' width='192'>
      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
      N64AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='117' name='Contiental Chiffre' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB1CAYAAAAY2+7BAAAACXBIWXMAABJ0AAASdAHeZh94
      AAABcUlEQVR4nO3dsQ3EIBAAQb/lkui/AnrCJdjJP9LvTExwyQoSdJ+11jog6tw9AOwkANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZD2GMCc8xdzwBZuANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASLveHPIvmH/1KoAx
      xrfngC08gUgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANGtSSbMm
      lTRPINIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk3RFFDVJc
      U3xVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Continental temps' width='192'>
      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
      rAFYKs3/B7zpSy39T+4LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Domaine 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Domaine 2' width='192'>
      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
      CjWRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Domaine 3' width='192'>
      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
      jF//H898qvAsVWNcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Internationale Chiffre' width='141'>
      iVBORw0KGgoAAAANSUhEUgAAAI0AAADACAYAAAA5mOAXAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAB8klEQVR4nO3SsQ2AMBDAQGD/edM+M1gUUcTdBC58z8xcEDy7AziPachMQ2YaMtOQmYbM
      NGS/m2attTvheL+bhu9MQ2YaMtOQmYbMNGSmITMNmWnITENmGjLTkJmGzDRkpiEzDZlpyExD
      Zhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnITENmGjLTkJmGzDRkpiEzDZlp
      yExDZhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnITENmGjLTkJmGzDRkpiEz
      DZlpyExDZhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnITENmGjLTkJmGzDRk
      piEzDZlpyExDZhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnITENmGjLTkJmG
      zDRkpiEzDZlpyExDZhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnITENmGjLT
      kJmGzDRkpiEzDZlpyExDZhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnITENm
      GjLTkJmGzDRkpiEzDZlpyExDZhoy05CZhsw0ZKYhMw2ZachMQ2YaMtOQmYbMNGSmITMNmWnI
      TENmGjLTkJmGzDRkpiF7AYBuCF7j/Dw/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Internationale temps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Les 3 domaines' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='National' width='192'>
      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
    </thumbnail>
    <thumbnail height='117' name='National chiffres' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB1CAYAAAAY2+7BAAAACXBIWXMAABJ0AAASdAHeZh94
      AAABcUlEQVR4nO3dsQ3EIBAAQb/lkui/AnrCJdjJP9LvTExwyQoSdJ+11jog6tw9AOwkANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZD2GMCc8xdzwBZuANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASLveHPIvmH/1KoAx
      xrfngC08gUgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANGtSSbMm
      lTRPINIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk3RFFDVJc
      U3xVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='National temps' width='192'>
      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
      1f4fUx+TPdnMCowAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Présentation du P8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TdB : Vue Continental' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TdB : Vue international' width='192'>
      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
      lRvO/we7TrnMWLXXOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TdB : Vue national' width='192'>
      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
      oTxy/P/LcCZgaaRJUAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vue continental' width='192'>
      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
      4SGzBzBZAwRQsmRSSdIrm3ojzkLcuJ2N2+Lw0vrt/51/9c9/kybXENc6Jslqj3YNB1MAJmuA
      FYdsQRDiJDIfVmg9HiHi8OIVVybYFnDlV7F9RyPirbNcHlwg+wgX3DIFYLIG2PHnuRH1GYYH
      I6RVHT27yNjVHhYrS8iXPzIyF6zkVdSztczByJWL9M2meFQdgTkHMFkDBDwF5ZT4J+joOMv5
      xRAeZZquHpGdx8txWiUEQ7nzFNlPZfN2oskr9F3vxr+nkULPw78NMgVgsjbYgtTs2Itou0Zn
      fzcTUoDao0/SWupBFgFdRA5uoU613z5F8hbTvC2JPhQjkVQwPA+/7qK5MpzJqpFMJhkZGaG+
      fv2sC2TOAUw2NaYATDY1pgBMNjWmAEw2NaYATDY1pgBMNjWmAEw2NaYATDY1pgBMNjWmAEw2
      NaYATDY1pgBMNjWmAEw2NaYATDY1pgBMNjWmAEw2NaYATDY1pgBMNjWmAEw2NaYATDY1pgBM
      NjWmAEw2NaYATDY1pgBMNjWmAEw2NaYATDY1pgBMNjWmAEw2NaYATDY1pgBMNjWmAEw2NaYA
      TDY1/z8+T+nGz5gF5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vue international 4i' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
